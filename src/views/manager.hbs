{{#if user}}
<div class="container">
    <div class="product-container">
        <h1><span>Bienvenido</span> {{user.first_name}} {{user.last_name}}!</h1>
        <p><span>Rol:</span> {{user.role}}</p>

        <button id="logout-btn">Logout</button>
        {{/if}}
        <h1>Administrador de Productos</h1>
        <div class="page-container">
            <div>
                <h2>Eliminar producto por ID</h2>
                <form id="deleteProductForm">
                    <label for="productId">ID del Producto:</label>
                    <input type="text" id="productId" name="productId" required>
                    <button type="button" id="deleteProductBtn">Eliminar Producto</button>
                </form>
            </div>
            <div>
                <h2>Agregar un producto</h2>
                <form id="createProductForm">
                    <label for="title">Nombre del Producto:</label>
                    <input type="text" id="title" name="title" required><br>

                    <label for="description">Descripcion:</label>
                    <input type="text" id="description" name="description" required><br>

                    <label for="code">Codigo:</label>
                    <input type="text" id="code" name="code" required><br>

                    <label for="price">Precio:</label>
                    <input type="number" id="price" name="price" required><br>

                    <label for="stock">Stock:</label>
                    <input type="number" id="stock" name="stock" required><br>

                    <label for="category">Categoria:</label>
                    <input type="text" id="category" name="category" required><br>


                    <label for="thumbnails">Imagenes:</label>
                    <input type="file" id="thumbnails" name="thumbnails" multiple required><br>

                    <!--<label for="thumbnails">Imagenes ("/images/laptop1.webp" para testear):</label>
                    <input type="text" id="thumbnails" name="thumbnails" required><br>-->

                    <button type="button" id="createProductBtn">Agregar Producto</button>
                </form>
            </div>
            <div>
                <h2>Modificar un producto por ID</h2>
                <form id="updateProductForm">
                    <label for="updateProductId">ID del Producto (requerido):</label>
                    <input type="text" id="updateProductId" name="updateProductId" required><br>
                    <label for="updateTitle">Nuevo Nombre del Producto:</label>
                    <input type="text" id="updateTitle" name="updateTitle"><br>
                    <label for="updateDescription">Nueva Descripción:</label>
                    <input type="text" id="updateDescription" name="updateDescription"><br>
                    <label for="updateCode">Nuevo Código:</label>
                    <input type="text" id="updateCode" name="updateCode"><br>
                    <label for="updatePrice">Nuevo Precio:</label>
                    <input type="number" id="updatePrice" name="updatePrice"><br>
                    <label for="updateStock">Nuevo Stock:</label>
                    <input type="number" id="updateStock" name="updateStock"><br>
                    <label for="updateCategory">Nueva Categoría:</label>
                    <input type="text" id="updateCategory" name="updateCategory"><br>
                    <!-- <label for="updateThumbnails">Nuevas Imágenes:</label>
                    <input type="text" id="updateThumbnails" name="updateThumbnails"><br>-->
                    <label for="updateThumbnails">Nuevas Imágenes:</label>
                    <input type="file" id="updateThumbnails" name="updateThumbnails" multiple><br>


                    <button type="button" id="updateProductBtn">Actualizar Producto</button>
                </form>
            </div>
            <div>
                <h1>Lista de Productos</h1>
                <ul class="products">
                    {{#each products}}
                    <li class="product-card">
                        <strong>ID:</strong> {{_id}}<br>
                        <strong>Title:</strong> {{title}}<br>
                        <strong>Description:</strong> {{description}}<br>
                        <strong>Code:</strong> {{code}}<br>
                        <strong>Price:</strong> ${{price}}<br>
                        <strong>Status:</strong> {{status}}<br>
                        <strong>Stock:</strong> {{stock}}<br>
                        <strong>Category:</strong> {{category}}<br>
                        <strong>Thumbnails:</strong>
                        <ul class="thumbnails">
                            {{#each thumbnails}}
                            <li><img class="image" src="{{this}}" alt="Thumbnail"></li>
                            {{/each}}
                        </ul>
                    </li>
                    {{/each}}
                </ul>
            </div>
        </div>
        <script src=""></script>
        <script>
            document.getElementById('logout-btn').addEventListener('click', function () {
                fetch('/api/session/logout', {
                    method: 'GET',
                    credentials: 'include',
                })
                    .then(response => {
                        if (response.ok) {
                            window.location.href = '/login';
                        } else {
                            console.error('Error en el logout:', response.statusText);
                        }
                    })
                    .catch(error => console.error('Error en el logout:', error));
            });

            document.getElementById('deleteProductBtn').addEventListener('click', deleteProduct);

            document.getElementById('createProductBtn').addEventListener('click', createProduct);

            document.getElementById('updateProductBtn').addEventListener('click', updateProduct);


            function deleteProduct() {
                const productId = document.getElementById('productId').value;

                fetch(`/api/products/${productId}`, {
                    method: 'DELETE',
                })
                    .then(response => {
                        if (response.ok) {

                            const productElement = document.getElementById(`product_${productId}`);
                            if (productElement) {
                                productElement.remove();
                            }
                        } else {
                            console.error('Error al eliminar el producto:', response.statusText);
                        }
                    })
                    .catch(error => console.error('Error al eliminar el producto:', error));


                document.getElementById('productId').value = '';
            }

            function createProduct() {

                const title = document.getElementById('title').value;
                const description = document.getElementById('description').value;
                const code = document.getElementById('code').value;
                const price = parseFloat(document.getElementById('price').value);
                const stock = parseInt(document.getElementById('stock').value);
                const category = document.getElementById('category').value;
                const thumbnailsInput = document.getElementById('thumbnails');

                const formData = new FormData();
                formData.append('title', title);
                formData.append('description', description);
                formData.append('code', code);
                formData.append('price', price);
                formData.append('stock', stock);
                formData.append('category', category);

                const thumbnailsFiles = thumbnailsInput.files;
                for (let i = 0; i < thumbnailsFiles.length; i++) {
                    formData.append('thumbnails', thumbnailsFiles[i]);
                }

                fetch('/api/products', {
                    method: 'POST',
                    body: formData,
                })
                    .then(response => {
                        if (response.ok) {
                            document.getElementById('title').value = '';
                            document.getElementById('description').value = '';
                            document.getElementById('code').value = '';
                            document.getElementById('price').value = '';
                            document.getElementById('stock').value = '';
                            document.getElementById('category').value = '';
                            document.getElementById('thumbnails').value = '';

                        } else {
                            console.error('Error al crear el producto:', response.statusText);
                        }
                    })
                    .catch(error => console.error('Error al crear el producto:', error));
            }



            function updateProduct() {
                const productId = document.getElementById('updateProductId').value;

                const updatedProduct = {};

                const titleInput = document.getElementById('updateTitle');
                if (titleInput.value.trim() !== '') {
                    updatedProduct.title = titleInput.value;
                }

                const descriptionInput = document.getElementById('updateDescription');
                if (descriptionInput.value.trim() !== '') {
                    updatedProduct.description = descriptionInput.value;
                }

                const codeInput = document.getElementById('updateCode');
                if (codeInput.value.trim() !== '') {
                    updatedProduct.code = codeInput.value;
                }

                const priceInput = document.getElementById('updatePrice');
                if (priceInput.value.trim() !== '') {
                    updatedProduct.price = parseFloat(priceInput.value);
                }

                const stockInput = document.getElementById('updateStock');
                if (stockInput.value.trim() !== '') {
                    updatedProduct.stock = parseInt(stockInput.value);
                }

                const categoryInput = document.getElementById('updateCategory');
                if (categoryInput.value.trim() !== '') {
                    updatedProduct.category = categoryInput.value;
                }

                const thumbnailsInput = document.getElementById('updateThumbnails');
                if (thumbnailsInput.value.trim() !== '') {
                    updatedProduct.thumbnails = thumbnailsInput.files;
                }

                fetch(`/api/products/${productId}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(updatedProduct),
                })
                    .then(response => {
                        if (response.ok) {
                            // Actualización exitosa, puedes realizar alguna acción adicional si lo deseas
                            console.log('Producto actualizado exitosamente');
                        } else {
                            console.error('Error al actualizar el producto:', response.statusText);
                        }
                    })
                    .catch(error => console.error('Error al actualizar el producto:', error));
            }

        </script>